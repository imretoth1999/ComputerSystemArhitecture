     1                                  ;avem un text si scriem in fisier numai vocalele 
     2                                  bits 32 
     3                                  
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fprintf, fclose, fread,printf
     8                                  import exit msvcrt.dll  
     9                                  import fopen msvcrt.dll  
    10                                  import fprintf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fread msvcrt.dll 
    13                                  import printf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 00<rept>                	d times 100 db 0 
    18                                  
    19                                  
    20 00000064 636F6E746F722E7478-         nume_fisier db "contor.txt", 0  ; numele fisierului care va fi creat
    20 0000006D 7400               
    21 0000006F 7200                        mod_acces db "r", 0          ; modul de deschidere a fisierului - 
    22                                                                   ; w - pentru scriere. daca fiserul nu exista, se va crea      
    23 00000071 00000000                    k dd 0                                        
    24 00000075 FFFFFFFF                    descriptor_fis dd -1         ; variabila in care vom salva descriptorul fisierului - necesar pentru a putea face referire la fisier
    25 00000079 4E756D626572206F66-         format dw "Number of odd numbers  = %d",0
    25 00000082 206F6464206E756D62-
    25 0000008B 65727320203D202564-
    25 00000094 000000             
    26                                      len equ 100                     ; numarul maxim de elemente citite din fisier intr-o etapa
    27 00000097 <res 00000064>              buffer resb len                 ; sirul in care se va citi textul din fisier
    28                                                                      
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                  
    33 00000000 68[6F000000]                    push dword mod_acces
    34 00000005 68[64000000]                    push dword nume_fisier
    35 0000000A FF15[00000000]                  call [fopen]
    36 00000010 83C408                          add esp, 4*2;we open the file
    37                                          
    38 00000013 83F800                          cmp eax, 0                  ;if there was an error while reading we jump to final
    39 00000016 746F                            je final
    40                                          
    41 00000018 A3[75000000]                    mov [descriptor_fis], eax ;we move the value of the descriptor into a variable
    42                                              
    43                                          bucla:
    44                                          
    45 0000001D FF35[75000000]                      push dword [descriptor_fis]
    46 00000023 6A01                                push dword 1
    47 00000025 6A01                                push dword 1
    48 00000027 68[97000000]                        push dword buffer
    49 0000002C FF15[00000000]                      call [fread];we read every character from the file and put it into the buffer
    50 00000032 83C410                              add esp, 4*4
    51 00000035 83F800                              cmp eax, 0
    52 00000038 742A                                je cleanup
    53                                            ;we check if the character is numeric or not
    54 0000003A 833D[97000000]39                    cmp dword [buffer],'9';we find if the number is <=9
    55 00000041 7E02                                jle nr1           
    56 00000043 EBD8                                jmp bucla
    57                                              nr1:
    58 00000045 833D[97000000]31                    cmp dword[buffer],'1' ;we find if the character is >=1
    59 0000004C 7D02                                jge nr
    60 0000004E EBCD                                jmp bucla
    61                                              nr:
    62 00000050 8B1D[97000000]                      mov EBX,[buffer]
    63 00000056 D0EB                                shr BL,1
    64 00000058 7202                                jc odd ; if its odd the carry flag is 1
    65 0000005A EBC1                                jmp bucla
    66 0000005C FE05[71000000]          odd:       inc byte[k]
    67 00000062 EBB9                    JMP bucla
    68                                  
    69                                        cleanup:
    70                                        
    71 00000064 FF35[75000000]                  push dword [descriptor_fis]
    72 0000006A FF15[00000000]                  call [fclose]
    73 00000070 83C404                          add esp, 4
    74 00000073 FF35[71000000]                  push dword[k]
    75 00000079 68[79000000]                    push dword format
    76 0000007E FF15[00000000]                  call [printf];we call the function
    77 00000084 83C408                          add esp, 4 * 2    ; eliberam parametrii de pe stiva; 4 = dimensiunea unui dword; 2 = nr de parametri
    78                                        final:
    79                                        
    80                                  
    81 00000087 6A00                            push    dword 0      
    82 00000089 FF15[00000000]                  call    [exit]       
